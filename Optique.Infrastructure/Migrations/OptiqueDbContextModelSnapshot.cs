// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Optique.Infrastructure.Data;

#nullable disable

namespace Optique.Infrastructure.Migrations
{
    [DbContext(typeof(OptiqueDbContext))]
    partial class OptiqueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Optique.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Civilite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<string>("MontantLettres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OrdonnanceId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MedecinId");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.HasIndex("OrdonnanceId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("Optique.Domain.Entities.LigneFacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactureId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qte")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("CAST([Qte] * [PrixUnitaire] AS DECIMAL(10,2))", false);

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.ToTable("LignesFacture");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Medecin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medecins");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Ordonnance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ADD_PRES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOrdonnance")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Loin_OD_Axe")
                        .HasColumnType("int");

                    b.Property<decimal?>("Loin_OD_Cyl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Loin_OD_Sph")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Loin_OG_Axe")
                        .HasColumnType("int");

                    b.Property<decimal?>("Loin_OG_Cyl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Loin_OG_Sph")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pres_OD_Axe")
                        .HasColumnType("int");

                    b.Property<decimal?>("Pres_OD_Cyl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Pres_OD_Sph")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Pres_OG_Axe")
                        .HasColumnType("int");

                    b.Property<decimal?>("Pres_OG_Cyl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Pres_OG_Sph")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MedecinId");

                    b.ToTable("Ordonnances");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Param", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Cle")
                        .IsUnique();

                    b.ToTable("Params");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Facture", b =>
                {
                    b.HasOne("Optique.Domain.Entities.Client", "Client")
                        .WithMany("Factures")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Optique.Domain.Entities.Medecin", "Medecin")
                        .WithMany("Factures")
                        .HasForeignKey("MedecinId");

                    b.HasOne("Optique.Domain.Entities.Ordonnance", "Ordonnance")
                        .WithMany()
                        .HasForeignKey("OrdonnanceId");

                    b.Navigation("Client");

                    b.Navigation("Medecin");

                    b.Navigation("Ordonnance");
                });

            modelBuilder.Entity("Optique.Domain.Entities.LigneFacture", b =>
                {
                    b.HasOne("Optique.Domain.Entities.Facture", "Facture")
                        .WithMany("Lignes")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Ordonnance", b =>
                {
                    b.HasOne("Optique.Domain.Entities.Client", "Client")
                        .WithMany("Ordonnances")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Optique.Domain.Entities.Medecin", "Medecin")
                        .WithMany("Ordonnances")
                        .HasForeignKey("MedecinId");

                    b.Navigation("Client");

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Client", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("Ordonnances");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Facture", b =>
                {
                    b.Navigation("Lignes");
                });

            modelBuilder.Entity("Optique.Domain.Entities.Medecin", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("Ordonnances");
                });
#pragma warning restore 612, 618
        }
    }
}
